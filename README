Project 2 - Synchronization on Road Construction
-------------------------------------------------
Team Members & Contributions:

Nick
•
•
•

Eddie

• Created and debugged intersection function
• Assisted in project design
• Sent and received clarifying emails

Marco Rodriguez
• Created and worked on the car spawner thread
• Created Readme File
• Organized group members over github

--------------------------------------------------
Threads (Tasks for each thread, Thread function name)

Car Spanwer Thread:
  void *carSpawn(void *param)
  Tasks:
  • Create cars that will be loaded into the buffer
  • When a car arrives, there is an 80% chance of another car following it
  • Once no car comes, there is a 20 second delay (using pthread_sleep) before any new car will come.

Flag Signaler Thread:
 void *signaler(void *param)
 Tasks:
  • 
  • 
  •
  
 Intersection Thread:
  void* intersection(void* param)
  Tasks:
  • 
  •
  • 
---------------------------------------------------
Semaphores (Name, Initial Value, Purpose)

emptyLock
• Initial Value = 0
• Purpose: 
• In carSpawn thread: After pushing a car into the buffer, emptyLock will check if its value is 0,
 log a wake up action, then call sem_post
• In signaler thread: Uses emptyLock to determine if buffer is empty, then logs that the signaler 
went to sleep.
---------------------------------------------------
Mutex Locks (Name, Purpose)

bufLock
• Lock for when writing to car buffer.

fileLock
• Used when writing to car.log and flagperson.log
---------------------------------------------------
Strengths
•
•

Weaknesses
•
